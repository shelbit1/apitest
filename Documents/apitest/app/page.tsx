"use client";

import React, { useState, useEffect } from "react";
import { useRouter } from "next/navigation";

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
interface AllWebData {
  "–û—Ç—á–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏": any[];
  "–•—Ä–∞–Ω–µ–Ω–∏–µ": any[];
  "–ü—Ä–∏–µ–º–∫–∞": any[];
  "–ú–æ–∏ —Ç–æ–≤–∞—Ä—ã": any[];
  "–ü–æ —Ç–æ–≤–∞—Ä–∞–º": any[];
  "–ü–æ –ø–µ—Ä–∏–æ–¥–∞–º": {
    [key: string]: {
      value: number | string;
      formula?: string;
      comment?: string;
      percent?: number;
    };
  };
}

interface Cabinet {
  id: string;
  name: string;
  token: string;
  createdAt: string;
}

export default function Home() {
  const [apiToken, setApiToken] = useState("");
  const [startDate, setStartDate] = useState("");
  const [endDate, setEndDate] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [savedToken, setSavedToken] = useState("");
  const [showWebData, setShowWebData] = useState(false);
  const [webData, setWebData] = useState<AllWebData | null>(null);
  const [isLoadingWebData, setIsLoadingWebData] = useState(false);
  const [activeSheet, setActiveSheet] = useState<string>("–ü–æ –ø–µ—Ä–∏–æ–¥–∞–º");
  const [googleSheetsLink, setGoogleSheetsLink] = useState("");
  const [selectedCabinet, setSelectedCabinet] = useState<Cabinet | null>(null);
  const router = useRouter();

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    const savedCabinet = localStorage.getItem("selected-cabinet");
    if (savedCabinet) {
      try {
        const cabinet = JSON.parse(savedCabinet);
        setSelectedCabinet(cabinet);
        setApiToken(cabinet.token);
        setSavedToken(cabinet.token);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–±–∏–Ω–µ—Ç–∞:", error);
      }
    }
  }, []);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
  const handleSaveToken = () => {
    if (apiToken.trim()) {
      localStorage.setItem("wb_api_token", apiToken);
      setSavedToken(apiToken);
      alert("–¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!");
    } else {
      alert("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è");
    }
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ (legacy)
  const handleDeleteToken = () => {
    localStorage.removeItem("wb_api_token");
    setSavedToken("");
    setApiToken("");
    alert("–¢–æ–∫–µ–Ω —É–¥–∞–ª–µ–Ω");
  };

  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏
  const goToCabinets = () => {
    router.push('/cabinets');
  };

  // –°–º–µ–Ω–∞ –∫–∞–±–∏–Ω–µ—Ç–∞
  const changeCabinet = () => {
    localStorage.removeItem('selected-cabinet');
    setSelectedCabinet(null);
    setApiToken('');
    setSavedToken('');
    router.push('/cabinets');
  };

  // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
  const handleDownloadReport = async () => {
    if (!selectedCabinet) {
      alert("–í—ã–±–µ—Ä–∏—Ç–µ –í–ë –∫–∞–±–∏–Ω–µ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞");
      return;
    }
    
    if (!startDate || !endDate) {
      alert("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–∞—Ç");
      return;
    }

    if (new Date(startDate) > new Date(endDate)) {
      alert("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è");
      return;
    }

    setIsLoading(true);
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏
      const savedCostPrices = localStorage.getItem("wb_cost_prices");
      let costPricesData = {};
      
      if (savedCostPrices) {
        try {
          costPricesData = JSON.parse(savedCostPrices);
          console.log(`üí∞ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏: ${Object.keys(costPricesData).length} —Ç–æ–≤–∞—Ä–æ–≤`);
        } catch (error) {
          console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏:", error);
        }
      }
      
      const response = await fetch("/api/wildberries/report", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          token: selectedCabinet.token,
          startDate,
          endDate,
          costPricesData,
        }),
      });

      if (!response.ok) {
        // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
        let errorData;
        try {
          errorData = await response.json();
        } catch (e) {
          errorData = { error: `HTTP ${response.status}: ${response.statusText}` };
        }
        
        console.error("‚ùå –û—à–∏–±–∫–∞ API:", errorData);
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        let errorMessage = errorData.error || `–û—à–∏–±–∫–∞ API: ${response.status}`;
        if (errorData.help) {
          errorMessage += `\n\nüí° –†–µ—à–µ–Ω–∏–µ: ${errorData.help}`;
        }
        if (errorData.details) {
          errorMessage += `\n\nüìÑ –î–µ—Ç–∞–ª–∏: ${errorData.details}`;
        }
        
        throw new Error(errorMessage);
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ blob
      const blob = await response.blob();
      
      // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = `wildberries_full_report_${startDate}_${endDate}.xlsx`;
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
      
      alert("–û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω!");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞:", error);
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
      const errorMessage = (error as Error).message;
      const errorLines = errorMessage.split('\n');
      
      // –°–æ–∑–¥–∞–µ–º –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      let displayMessage = errorLines[0]; // –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      
      if (errorLines.length > 1) {
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏
        displayMessage = errorLines.join('\n');
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º alert —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
      alert(`‚ùå ${displayMessage}`);
    } finally {
      setIsLoading(false);
    }
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏
  const handleShowWebData = async () => {
    if (!selectedCabinet) {
      alert("–í—ã–±–µ—Ä–∏—Ç–µ –í–ë –∫–∞–±–∏–Ω–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏");
      return;
    }
    
    if (!startDate || !endDate) {
      alert("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–∞—Ç");
      return;
    }

    if (new Date(startDate) > new Date(endDate)) {
      alert("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è");
      return;
    }

    try {
      console.log("üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏...");
      console.log("üìÖ –ü–µ—Ä–∏–æ–¥:", { startDate, endDate });
      console.log("üîê –ö–∞–±–∏–Ω–µ—Ç:", selectedCabinet.name);
      
      setIsLoadingWebData(true);
      setWebData(null);
      setShowWebData(false);
      
      const response = await fetch('/api/wildberries/periods', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          token: selectedCabinet.token,
          startDate,
          endDate
        })
      });

      console.log("üì° –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.status);
      
      if (!response.ok) {
        // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
        let errorData;
        try {
          errorData = await response.json();
        } catch (e) {
          errorData = { error: `HTTP ${response.status}: ${response.statusText}` };
        }
        
        console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", errorData);
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        let errorMessage = errorData.error || `–û—à–∏–±–∫–∞ API: ${response.status}`;
        if (errorData.help) {
          errorMessage += `\n\nüí° –†–µ—à–µ–Ω–∏–µ: ${errorData.help}`;
        }
        if (errorData.details) {
          errorMessage += `\n\nüìÑ –î–µ—Ç–∞–ª–∏: ${errorData.details}`;
        }
        
        throw new Error(errorMessage);
      }

      const data = await response.json();
      console.log("üìä –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", data);
      
      setWebData(data);
      setShowWebData(true);
      
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤–µ–±-–≤–µ—Ä—Å–∏–∏:", error);
      alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    } finally {
      setIsLoadingWebData(false);
    }
  };

  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏
  const handleUploadCostPrice = () => {
    window.location.href = '/cost-price';
  };

  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö "–ü–æ –ø–µ—Ä–∏–æ–¥–∞–º"
  const renderPeriodsData = (data: any) => {
    const sections = [
      {
        title: "–ü–æ—Å—Ç–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤",
        color: "bg-blue-100",
        borderColor: "border-blue-300",
        textColor: "text-blue-800",
        items: ["–î–æ—Å—Ç–∞–≤–∫–∏", "–û—Ç–∫–∞–∑—ã –±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤", "–ò—Ç–æ–≥–æ –ø–æ—Å—Ç–∞–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞–º"]
      },
      {
        title: "–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥",
        color: "bg-orange-100", 
        borderColor: "border-orange-300",
        textColor: "text-orange-800",
        items: ["–ü—Ä–æ–¥–∞–∂–∏", "–í–æ–∑–≤—Ä–∞—Ç—ã", "–ò—Ç–æ–≥–æ –∫–æ–ª-–≤–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞", "–ü—Ä–æ–¥–∞–∂–∏ + –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏", "–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏", "–ó–∞–∫–∞–∑–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤", "–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –≤ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–∏ –∑–∞ —Ç–æ–≤–∞—Ä —à—Ç"]
      },
      {
        title: "–î–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö –ø–æ —Ü–µ–Ω–µ –ø—Ä–æ–¥–∞–≤—Ü–∞ —Å —É—á–µ—Ç–æ–º —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ–π —Å–∫–∏–¥–∫–∏ (–¥–æ –°–ü–ü)",
        color: "bg-blue-100",
        borderColor: "border-blue-300", 
        textColor: "text-blue-800",
        items: ["–ü—Ä–æ–¥–∞–∂–∏ –¥–æ –°–ü–ü", "–í–æ–∑–≤—Ä–∞—Ç—ã –¥–æ –°–ü–ü", "–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö –¥–æ –°–ü–ü", "–í—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –¥–æ –°–ü–ü", "–í—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ –°–ü–ü", "–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –ø—Ä–æ–¥–∞–∂–∏ –¥–æ –°–ü–ü", "% –∫–æ–º–∏—Å—Å–∏–∏ –í–ë –¥–æ –°–ü–ü"]
      },
      {
        title: "–î–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ —Ä—É–±–ª—è—Ö –ø–æ —Ü–µ–Ω–µ —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è (–ø–æ—Å–ª–µ –°–ü–ü)",
        color: "bg-orange-100",
        borderColor: "border-orange-300",
        textColor: "text-orange-800",
        items: ["–ü—Ä–æ–¥–∞–∂–∏ –ø–æ—Å–ª–µ –°–ü–ü", "–í–æ–∑–≤—Ä–∞—Ç—ã –ø–æ—Å–ª–µ –°–ü", "–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö –ø–æ—Å–ª–µ –°–ü–ü", "–í—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –ø–æ—Å–ª–µ –°–ü–ü", "–í—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Å–ª–µ –°–ü–ü", "–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –ø—Ä–æ–¥–∞–∂–∏ –ø–æ—Å–ª–µ –°–ü", "–°—É–º–º–∞ –°–ü–ü", "% –°–ü–ü"]
      },
      {
        title: "–ö –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—é –∑–∞ —Ç–æ–≤–∞—Ä",
        color: "bg-orange-100",
        borderColor: "border-orange-300",
        textColor: "text-orange-800",
        items: ["–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –≤ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–∏ –∑–∞ —Ç–æ–≤–∞—Ä", "–ü—Ä–æ–¥–∞–∂–∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ (—Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ - –∫–æ–º–∏—Å—Å–∏—è –í–ë)", "–í–æ–∑–≤—Ä–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–æ —Ñ–∞–∫—Ç—É –∑–∞ –≤–æ–∑–≤—Ä–∞—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–µ (–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ - –∫–æ–º–∏—Å—Å–∏—è –í–ë)", "–ö –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—é –∑–∞ —Ç–æ–≤–∞—Ä"]
      },
      {
        title: "–°—Ç–∞—Ç—å–∏ —É–¥–µ—Ä–∂–∞–Ω–∏–π –í–∞–π–ª–¥–±–µ—Ä—Ä–∏–∑",
        color: "bg-purple-100",
        borderColor: "border-purple-300", 
        textColor: "text-purple-800",
        items: ["–ü–ª–∞–Ω–æ–≤–∞—è –∫–æ–º–∏—Å—Å–∏—è", "–§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–º–∏—Å—Å–∏—è", "–°—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏", "–õ–æ–≥–∏—Å—Ç–∏–∫–∞ –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä", "% –ª–æ–≥–∏—Å—Ç–∏–∫–∏ –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏–∏ –¥–æ –°–ü–ü", "–®—Ç—Ä–∞—Ñ—ã", "–î–æ–ø–ª–∞—Ç—ã", "–•—Ä–∞–Ω–µ–Ω–∏–µ", "% —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏–∏ –¥–æ –°–ü–ü", "–ü–ª–∞—Ç–Ω–∞—è –ø—Ä–∏–µ–º–∫–∞", "–†–µ–∫–ª–∞–º–∞ –±–∞–ª–∞–Ω—Å + —Å—á–µ—Ç", "% –î–†–† (–¥–æ–ª—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤) –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏–∏ –¥–æ –°–ü–ü (–Ω–∞ –µ–¥–∏–Ω–∏—Ü—É)", "% –î–†–† (–¥–æ–ª—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤) –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏–∏ –¥–æ –°–ü–ü", "–ò–ú–ò–ó–† (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ—Ö–∞–Ω–∏–∫ –∏—Å–∫—É—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–≤—ã—à–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞)", "–û—Ç–∑—ã–≤—ã", "–ö—Ä–µ–¥–∏—Ç", "–¢–µ–ª–æ –∫—Ä–µ–¥–∏—Ç–∞", "–ü—Ä–æ—Ü–µ–Ω—Ç –∫—Ä–µ–¥–∏—Ç–∞", "% –∫—Ä–µ–¥–∏—Ç–∞ –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏–∏ –¥–æ –°–ü–ü", "–ü—Ä–æ—á–∏–µ —É–¥–µ—Ä–∂–∞–Ω–∏—è", "% –ø—Ä–æ—á–∏—Ö —É–¥–µ—Ä–∂–∞–Ω–∏–π –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏–∏ –¥–æ –°–ü–ü", "–ò—Ç–æ–≥–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö —É—Å–ª—É–≥ –í–ë –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–æ –°–ü–ü", "% –≤—Å–µ—Ö —É—Å–ª—É–≥ –í–ë –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–æ –°–ü–ü", "% –≤—Å–µ—Ö —É—Å–ª—É–≥ –í–ë –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –°–ü–ü"]
      },
      {
        title: "–ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤",
        color: "bg-green-100",
        borderColor: "border-green-300",
        textColor: "text-green-800",
        items: ["–ò–¢–û–ì–û –∫ –≤—ã–ø–ª–∞—Ç–µ", "–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞"]
      }
    ];

    return (
      <div className="overflow-x-auto">
        <table className="w-full border-collapse border border-gray-300">
          <thead>
            <tr className="bg-gray-50">
              <th className="border border-gray-300 px-4 py-2 text-left font-semibold">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</th>
              <th className="border border-gray-300 px-4 py-2 text-right font-semibold">–ó–Ω–∞—á–µ–Ω–∏–µ</th>
              <th className="border border-gray-300 px-4 py-2 text-right font-semibold">%</th>
            </tr>
          </thead>
          <tbody>
            {sections.map((section, sectionIndex) => (
              <React.Fragment key={sectionIndex}>
                <tr>
                  <td colSpan={3} className={`${section.color} ${section.borderColor} ${section.textColor} border px-4 py-2 font-bold text-center`}>
                    {section.title}
                  </td>
                </tr>
                {section.items.map((itemKey, itemIndex) => {
                  const item = data[itemKey];
                  if (!item) return null;
                  
                  const value = typeof item.value === 'number' ? 
                    (item.value === 0 ? item.value : item.value.toLocaleString('ru-RU')) : 
                    item.value;
                  
                  const isZero = typeof item.value === 'number' && item.value === 0;
                  const percent = item.percent !== undefined ? 
                    `${(item.percent * 100).toLocaleString('ru-RU', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}%` : 
                    '';
                  
                  return (
                    <tr key={itemIndex}>
                      <td className="border border-gray-300 px-4 py-2">{itemKey}</td>
                      <td className={`border border-gray-300 px-4 py-2 text-right ${isZero ? 'text-red-600 font-semibold' : ''}`}>
                        {value}
                      </td>
                      <td className="border border-gray-300 px-4 py-2 text-right">{percent}</td>
                    </tr>
                  );
                })}
              </React.Fragment>
            ))}
          </tbody>
        </table>
      </div>
    );
  };

  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã
  const renderTableData = (data: any[], title: string) => {
    if (!data || data.length === 0) {
      return (
        <div className="text-center py-8 text-gray-500">
          –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        </div>
      );
    }

    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–≤—ã—Ö 50 —Å—Ç—Ä–æ–∫ (–∏–ª–∏ –º–µ–Ω—å—à–µ)
    const maxRowsForHeaders = 50;
    const headerSet: Set<string> = new Set();
    data.slice(0, maxRowsForHeaders).forEach((row) => {
      Object.keys(row).forEach((key) => headerSet.add(key));
    });
    const headers = Array.from(headerSet);
    
    return (
      <div className="overflow-x-auto">
        <table className="w-full border-collapse border border-gray-300">
          <thead>
            <tr className="bg-gray-50">
              {headers.map((header, index) => (
                <th key={index} className="border border-gray-300 px-4 py-2 text-left font-semibold">
                  {header}
                </th>
              ))}
            </tr>
          </thead>
          <tbody>
            {data.slice(0, 100).map((row, rowIndex) => (
              <tr key={rowIndex} className={rowIndex % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                {headers.map((header, cellIndex) => (
                  <td key={cellIndex} className="border border-gray-300 px-4 py-2">
                    {row[header] !== undefined ? row[header] : ''}
                  </td>
                ))}
              </tr>
            ))}
          </tbody>
        </table>
        {data.length > 100 && (
          <div className="text-center py-4 text-gray-600">
            –ü–æ–∫–∞–∑–∞–Ω–æ –ø–µ—Ä–≤—ã–µ 100 –∑–∞–ø–∏—Å–µ–π –∏–∑ {data.length}
          </div>
        )}
      </div>
    );
  };

  const sheetTabs = [
    "–û—Ç—á–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏",
    "–•—Ä–∞–Ω–µ–Ω–∏–µ", 
    "–ü—Ä–∏–µ–º–∫–∞",
    "–ú–æ–∏ —Ç–æ–≤–∞—Ä—ã",
    "–ü–æ —Ç–æ–≤–∞—Ä–∞–º",
    "–ü–æ –ø–µ—Ä–∏–æ–¥–∞–º"
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-8">
      <div className={`mx-auto transition-all duration-300 ${showWebData ? 'max-w-7xl' : 'max-w-2xl'}`}>
        <div className="bg-white rounded-lg shadow-lg p-8">
          <h1 className="text-3xl font-bold text-gray-800 mb-8 text-center">
            üìä Wildberries –ü–æ–ª–Ω—ã–π –û—Ç—á–µ—Ç
          </h1>
          
          {/* –°–µ–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –∫–∞–±–∏–Ω–µ—Ç–∞ */}
          <div className="mb-8">
            <h2 className="text-xl font-semibold text-gray-700 mb-4">üè¢ –í—ã–±—Ä–∞–Ω–Ω—ã–π –í–ë –∫–∞–±–∏–Ω–µ—Ç</h2>
            
            {selectedCabinet ? (
              <div className="p-4 bg-green-50 border border-green-200 rounded-lg">
                <div className="flex justify-between items-center">
                  <div>
                    <h3 className="font-semibold text-green-800">{selectedCabinet.name}</h3>
                    <p className="text-green-600 text-sm">
                      –¢–æ–∫–µ–Ω: ****{selectedCabinet.token.slice(-10)}
                    </p>
                    <p className="text-green-500 text-xs">
                      –î–æ–±–∞–≤–ª–µ–Ω: {new Date(selectedCabinet.createdAt).toLocaleDateString('ru-RU')}
                    </p>
                  </div>
                  <button
                    onClick={changeCabinet}
                    className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                  >
                    –°–º–µ–Ω–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç
                  </button>
                </div>
              </div>
            ) : (
              <div className="text-center py-8 border-2 border-dashed border-gray-300 rounded-lg">
                <p className="text-gray-600 mb-4">–í—ã–±–µ—Ä–∏—Ç–µ –í–ë –∫–∞–±–∏–Ω–µ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã</p>
                <button
                  onClick={goToCabinets}
                  className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-semibold"
                >
                  üè¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏
                </button>
              </div>
            )}
          </div>

          {/* –°–µ–∫—Ü–∏—è –ø–µ—Ä–∏–æ–¥–∞ */}
          <div className="mb-8">
            <h2 className="text-xl font-semibold text-gray-700 mb-4">üìÖ –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞
                </label>
                <input
                  type="date"
                  value={startDate}
                  onChange={(e) => setStartDate(e.target.value)}
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è
                </label>
                <input
                  type="date"
                  value={endDate}
                  onChange={(e) => setEndDate(e.target.value)}
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
              </div>
            </div>
          </div>



          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="mb-8">
            <h2 className="text-xl font-semibold text-gray-700 mb-4">‚ö° –î–µ–π—Å—Ç–≤–∏—è</h2>
            <div className="flex flex-col sm:flex-row gap-4">
              <button
                onClick={handleDownloadReport}
                disabled={isLoading}
                className="flex-1 px-6 py-3 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 disabled:bg-gray-400 transition-colors flex items-center justify-center gap-2"
              >
                {isLoading ? (
                  <>
                    <div className="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent"></div>
                    –°–æ–∑–¥–∞–Ω–∏–µ Excel –æ—Ç—á–µ—Ç–∞...
                  </>
                ) : (
                  <>üì• –°–∫–∞—á–∞—Ç—å Excel –æ—Ç—á–µ—Ç</>
                )}
              </button>
              
              <button
                onClick={handleShowWebData}
                disabled={isLoadingWebData}
                className="flex-1 px-6 py-3 bg-green-600 text-white rounded-lg font-semibold hover:bg-green-700 disabled:bg-gray-400 transition-colors flex items-center justify-center gap-2"
              >
                {isLoadingWebData ? (
                  <>
                    <div className="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent"></div>
                    –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...
                  </>
                ) : (
                  <>üìä –ü–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É</>
                )}
              </button>

              <button
                onClick={handleUploadCostPrice}
                className="flex-1 px-6 py-3 bg-orange-600 text-white rounded-lg font-semibold hover:bg-orange-700 transition-colors flex items-center justify-center gap-2"
              >
                üí∞ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å
              </button>

            </div>
          </div>

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
          <div className="mb-8 p-6 bg-yellow-50 border border-yellow-200 rounded-lg">
            <h3 className="text-lg font-semibold text-yellow-800 mb-3">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</h3>
            <div className="text-yellow-700 space-y-2">
              <p><strong>1.</strong> –ù–∞–∂–º–∏—Ç–µ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏" —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏ –í–ë –∫–∞–±–∏–Ω–µ—Ç—ã</p>
              <p><strong>2.</strong> –ü–æ–ª—É—á–∏—Ç–µ API —Ç–æ–∫–µ–Ω –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ Wildberries –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" ‚Üí "–î–æ—Å—Ç—É–ø –∫ API"</p>
              <p><strong>3.</strong> –î–æ–±–∞–≤—å—Ç–µ –∫–∞–±–∏–Ω–µ—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ —Ç–æ–∫–µ–Ω–æ–º –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</p>
              <p><strong>4.</strong> –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–∞—Ç (–º–∞–∫—Å–∏–º—É–º 30 –¥–Ω–µ–π)</p>
              <p><strong>5.</strong> –ù–∞–∂–º–∏—Ç–µ "–°–∫–∞—á–∞—Ç—å Excel –æ—Ç—á–µ—Ç" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel</p>
              <p><strong>6.</strong> –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–∫–∞–∑–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–µ</p>
              <p className="text-sm mt-3">üí° <strong>–í–µ–±-–≤–µ—Ä—Å–∏—è –≤–∫–ª—é—á–∞–µ—Ç:</strong> –û—Ç—á–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏, –•—Ä–∞–Ω–µ–Ω–∏–µ, –ü—Ä–∏–µ–º–∫–∞, –ú–æ–∏ —Ç–æ–≤–∞—Ä—ã, –ü–æ —Ç–æ–≤–∞—Ä–∞–º</p>
            </div>
          </div>

          {/* –í–µ–±-–¥–∞–Ω–Ω—ã–µ */}
          {showWebData && webData && (
            <div className="border-t pt-8">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-2xl font-bold text-gray-800">üìä –í–µ–±-–≤–µ—Ä—Å–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏</h2>
                <button
                  onClick={() => setShowWebData(false)}
                  className="px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors"
                >
                  ‚úï –°–∫—Ä—ã—Ç—å
                </button>
              </div>

              {/* –¢–∞–±—ã */}
              <div className="mb-6 border-b border-gray-200">
                <div className="flex flex-wrap gap-1">
                  {sheetTabs.map((sheet) => (
                    <button
                      key={sheet}
                      onClick={() => setActiveSheet(sheet)}
                      className={`px-4 py-2 font-medium rounded-t-lg transition-colors ${
                        activeSheet === sheet
                          ? 'bg-blue-600 text-white border-b-2 border-blue-600'
                          : 'text-gray-600 hover:text-blue-600 hover:bg-gray-50'
                      }`}
                    >
                      {sheet}
                    </button>
                  ))}
                </div>
              </div>

              {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ */}
              <div className="bg-gray-50 rounded-lg p-6">
                <h3 className="text-lg font-semibold mb-4">{activeSheet}</h3>
                
                {activeSheet === "–ü–æ –ø–µ—Ä–∏–æ–¥–∞–º" ? (
                  renderPeriodsData(webData["–ü–æ –ø–µ—Ä–∏–æ–¥–∞–º"])
                ) : (
                  renderTableData(webData[activeSheet as keyof AllWebData] as any[], activeSheet)
                )}
              </div>
            </div>
          )}

          {/* –ë–ª–æ–∫ BASIO */}
          <div className="mt-8 bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∞–≤–∞—Ç–∞—Ä–æ–º –∏ –∏–∫–æ–Ω–∫–∞–º–∏ */}
            <div className="flex items-center justify-between mb-8">
              <div className="flex items-center gap-4">
                <div className="w-16 h-16 bg-purple-600 rounded-full flex items-center justify-center">
                  <span className="text-white font-bold text-xl">wb</span>
                </div>
                <h3 className="text-xl font-semibold text-gray-800">BASIO</h3>
              </div>
              <div className="flex items-center gap-3">
                <button className="p-2 text-gray-500 hover:text-gray-700 transition-colors">
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                  </svg>
                </button>
                <button className="p-2 text-gray-500 hover:text-gray-700 transition-colors">
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                  </svg>
                </button>
                <button className="p-2 text-gray-500 hover:text-gray-700 transition-colors">
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                  </svg>
                </button>
              </div>
            </div>

            {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è */}
            <div className="mb-8">
              <p className="text-gray-600 mb-2">–ü–æ–¥–∫–ª—é—á–µ–Ω:</p>
              <p className="text-gray-800 font-semibold">19/06/2025 17:23</p>
            </div>

            {/* –ü–æ–ª–µ –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ Google –¢–∞–±–ª–∏—Ü—ã */}
            <div className="mb-8">
              {!googleSheetsLink ? (
                <div className="space-y-2">
                  <label className="block text-sm font-medium text-gray-700">
                    –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏, —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–¥–æ
                  </label>
                  <div className="flex gap-2">
                    <input
                      type="url"
                      value={googleSheetsLink}
                      onChange={(e) => setGoogleSheetsLink(e.target.value)}
                      placeholder="https://docs.google.com/spreadsheets/d/..."
                      className="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm"
                    />
                    <button
                      onClick={() => {
                        if (googleSheetsLink.trim()) {
                          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∞–ª–∏–¥–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ Google Sheets
                          if (googleSheetsLink.includes('docs.google.com/spreadsheets')) {
                            alert('–°—Å—ã–ª–∫–∞ –Ω–∞ Google –¢–∞–±–ª–∏—Ü—ã –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
                          } else {
                            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ Google –¢–∞–±–ª–∏—Ü—ã');
                            setGoogleSheetsLink('');
                          }
                        }
                      }}
                      className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm"
                    >
                      –î–æ–±–∞–≤–∏—Ç—å
                    </button>
                  </div>
                </div>
              ) : (
                <div className="flex items-center justify-between">
                                     <a
                     href={googleSheetsLink}
                     target="_blank"
                     rel="noopener noreferrer"
                     className="inline-flex items-center gap-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors font-medium"
                   >
                     üìä –ì–£–ì–õ-–¢–ê–ë–õ–ò–¶–ê
                   </a>
                  <button
                    onClick={() => setGoogleSheetsLink('')}
                    className="px-3 py-1 text-sm text-gray-500 hover:text-gray-700 transition-colors"
                  >
                    –£–¥–∞–ª–∏—Ç—å
                  </button>
                </div>
              )}
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ */}
            <div className="flex gap-4">
              <button className="flex-1 px-6 py-3 bg-gray-100 text-gray-700 rounded-lg font-medium hover:bg-gray-200 transition-colors">
                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
              </button>
              <button className="flex-1 px-6 py-3 bg-purple-600 text-white rounded-lg font-medium hover:bg-purple-700 transition-colors">
                –û—Ç—á–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
