// –ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Excel –æ—Ç—á–µ—Ç–æ–≤
import * as XLSX from "xlsx";
import { cleanCampaignName, mapAdvertStatus, mapAdvertType, mapPaymentType, mapPaymentStatus } from './data-mappers';
import * as fs from "fs";
import * as path from "path";

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π
interface Campaign {
  advertId: number;
  name: string;
  type: number;
  status: number;
  dailyBudget: number;
  createTime: string;
  changeTime: string;
  startTime: string;
  endTime: string;
}

interface FinancialData {
  advertId: number;
  date: string;
  sum: number;
  bill: number;
  type: string;
  docNumber: string;
  sku?: string;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Excel –æ—Ç—á–µ—Ç–∞
export async function createExcelReport(
  data: any[], 
  storageData: any[], 
  acceptanceData: any[], 
  advertData: any[], 
  productsData: any[], 
  paymentsData: any[], 
  campaigns: Campaign[], 
  financialData: FinancialData[], 
  costPriceData: any[], 
  productAnalyticsData: any[], 
  startDate: string, 
  endDate: string, 
  token: string, 
  includeFinanceSheet: boolean = false
): Promise<Buffer> {
  const startTime = Date.now();
  console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ Excel –æ—Ç—á–µ—Ç–∞...");
  
  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Excel
  const excelData = data.map((item) => ({
    "–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏": item.gi_id || "",
    "–ê—Ä—Ç–∏–∫—É–ª WB": item.nm_id || "",
    "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞": item.sa_name || "",
    "–ë–∞—Ä–∫–æ–¥": item.barcode || "",
    "–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞": item.doc_type_name || "",
    "–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã": item.supplier_oper_name || "",
    "–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞": item.order_dt || "",
    "–î–∞—Ç–∞ –ø—Ä–æ–¥–∞–∂–∏": item.sale_dt || "",
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": item.quantity || 0,
    "–¶–µ–Ω–∞ —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Å —É—á–µ—Ç–æ–º —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ–π —Å–∫–∏–¥–∫–∏": item.retail_price_withdisc_rub || 0,
    "–í–∞–π–ª–¥–±–µ—Ä—Ä–∏–∑ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–ª –¢–æ–≤–∞—Ä (–ü—Ä)": item.retail_amount || 0,
    "–ö –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—é –ø—Ä–æ–¥–∞–≤—Ü—É": item.ppvz_for_pay || 0,
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç–∞–≤–æ–∫": item.delivery_amount || 0,
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤": item.return_amount || 0,
    "–£—Å–ª—É–≥–∏ –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é": item.delivery_rub || 0,
    "–û–±—â–∞—è —Å—É–º–º–∞ —à—Ç—Ä–∞—Ñ–æ–≤": item.penalty || 0,
    "–î–æ–ø–ª–∞—Ç—ã": item.additional_payment || 0,
    "–í–∏–¥—ã –ª–æ–≥–∏—Å—Ç–∏–∫–∏, —à—Ç—Ä–∞—Ñ–æ–≤ –∏ –¥–æ–ø–ª–∞—Ç": item.bonus_type_name || "",
    "–°–∫–ª–∞–¥": item.office_name || "",
    "–°—Ç—Ä–∞–Ω–∞": item.site_country || "",
    "–¢–∏–ø –∫–æ—Ä–æ–±–æ–≤": item.gi_box_type_name || "",
    "–ù–æ–º–µ—Ä —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–π –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏": item.declaration_number || "",
    "–ù–æ–º–µ—Ä —Å–±–æ—Ä–æ—á–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è": item.assembly_id || "",
    "–ö–æ–¥ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏": item.kiz || "",
    "–®—Ç—Ä–∏—Ö–∫–æ–¥": item.shk_id || "",
    "Srid": item.srid || "",
    "–í–æ–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–¥–µ—Ä–∂–µ–∫ –ø–æ –ø–µ—Ä–µ–≤–æ–∑–∫–µ": item.rebill_logistic_cost || 0,
    "–•—Ä–∞–Ω–µ–Ω–∏–µ": item.storage_fee || 0,
    "–£–¥–µ—Ä–∂–∞–Ω–∏—è": item.deduction || 0,
    "–ü–ª–∞—Ç–Ω–∞—è –ø—Ä–∏–µ–º–∫–∞": item.acceptance || 0,
    "–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ (—Ç–æ–ª—å–∫–æ –¥–∞—Ç–∞)": item.order_dt ? item.order_dt.split('T')[0] : "",
    "–î–∞—Ç–∞ –ø—Ä–æ–¥–∞–∂–∏ (—Ç–æ–ª—å–∫–æ –¥–∞—Ç–∞)": item.sale_dt ? item.sale_dt.split('T')[0] : "",
  }));

  console.log(`‚è±Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ ${Date.now() - startTime}ms`);
  
  // –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –∫–Ω–∏–≥—É
  const workbook = XLSX.utils.book_new();
  
  // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –∏–∑ –¥–∞–Ω–Ω—ã—Ö
  const worksheet = XLSX.utils.json_to_sheet(excelData);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç –≤ –∫–Ω–∏–≥—É
  XLSX.utils.book_append_sheet(workbook, worksheet, "–û—Ç—á–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏");
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è
  if (storageData.length > 0) {
    addStorageSheet(workbook, storageData);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–µ–º–∫–∏
  if (acceptanceData.length > 0) {
    addAcceptanceSheet(workbook, acceptanceData);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
  if (productsData.length > 0) {
    addProductsSheet(workbook, productsData);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–µ–π
  if (paymentsData.length > 0) {
    addPaymentsSheet(workbook, paymentsData);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç —Å —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ –∫–∞–º–ø–∞–Ω–∏—è–º–∏
  if (campaigns.length > 0) {
    addCampaignsSheet(workbook, campaigns);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –†–ö (–µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω)
  if (includeFinanceSheet && financialData.length > 0) {
    addFinancialSheet(workbook, financialData);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç —Å —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å—é
  if (costPriceData.length > 0) {
    addCostPriceSheet(workbook, costPriceData);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π —Ç–æ–≤–∞—Ä–æ–≤
  if (productAnalyticsData.length > 0) {
    addProductAnalyticsSheet(workbook, productAnalyticsData);
  }
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Excel —Ñ–∞–π–ª
  const buffer = XLSX.write(workbook, { type: "buffer", bookType: "xlsx" });
  
  console.log(`‚úÖ Excel –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω –∑–∞ ${Date.now() - startTime}ms`);
  
  return buffer;
}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—Å—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è
function addStorageSheet(workbook: XLSX.WorkBook, storageData: any[]) {
  const storageSheet = XLSX.utils.json_to_sheet(storageData.map(item => ({
    "–ê—Ä—Ç–∏–∫—É–ª WB": item.nmId || "",
    "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞": item.vendorCode || "",
    "–°–∫–ª–∞–¥": item.warehouseName || "",
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": item.quantity || 0,
    "–¶–µ–Ω–∞": item.price || 0,
    "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è": item.lastChangeDate || "",
    "–ë–∞—Ä–∫–æ–¥": item.barcode || "",
    "–ü—Ä–µ–¥–º–µ—Ç": item.subject || "",
    "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": item.category || "",
    "–ë—Ä–µ–Ω–¥": item.brand || ""
  })));
  
  XLSX.utils.book_append_sheet(workbook, storageSheet, "–•—Ä–∞–Ω–µ–Ω–∏–µ");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—Å—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–µ–º–∫–∏
function addAcceptanceSheet(workbook: XLSX.WorkBook, acceptanceData: any[]) {
  const acceptanceSheet = XLSX.utils.json_to_sheet(acceptanceData.map(item => ({
    "–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏": item.incomeId || "",
    "–ê—Ä—Ç–∏–∫—É–ª WB": item.nmId || "",
    "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞": item.vendorCode || "",
    "–ë–∞—Ä–∫–æ–¥": item.barcode || "",
    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": item.quantity || 0,
    "–¶–µ–Ω–∞": item.totalPrice || 0,
    "–î–∞—Ç–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è": item.dateClose || "",
    "–°–∫–ª–∞–¥": item.warehouseName || "",
    "–°—Ç–∞—Ç—É—Å": item.status || ""
  })));
  
  XLSX.utils.book_append_sheet(workbook, acceptanceSheet, "–ü—Ä–∏–µ–º–∫–∞");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—Å—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
function addProductsSheet(workbook: XLSX.WorkBook, productsData: any[]) {
  const productsSheet = XLSX.utils.json_to_sheet(productsData.map(item => ({
    "–ê—Ä—Ç–∏–∫—É–ª WB": item.nmId || "",
    "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞": item.vendorCode || "",
    "–ü—Ä–µ–¥–º–µ—Ç": item.object || "",
    "–ë—Ä–µ–Ω–¥": item.brand || "",
    "–ù–∞–∑–≤–∞–Ω–∏–µ": item.title || "",
    "–§–æ—Ç–æ": item.photo || "",
    "–†–∞–∑–º–µ—Ä—ã": item.dimensions || "",
    "–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏": item.characteristics || "",
    "–¶–µ–Ω–∞": item.price || 0,
    "–°–∫–∏–¥–∫–∞": item.discount || 0,
    "–†–µ–π—Ç–∏–Ω–≥": item.rating || 0,
    "–û—Ç–∑—ã–≤—ã": item.reviewsCount || 0
  })));
  
  XLSX.utils.book_append_sheet(workbook, productsSheet, "–¢–æ–≤–∞—Ä—ã");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—Å—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–µ–π
function addPaymentsSheet(workbook: XLSX.WorkBook, paymentsData: any[]) {
  const paymentsSheet = XLSX.utils.json_to_sheet(paymentsData.map(item => ({
    "–ù–æ–º–µ—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏": item.operationId || "",
    "–î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏": item.date || "",
    "–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏": item.type || "",
    "–°—É–º–º–∞": item.amount || 0,
    "–ë–∞–ª–∞–Ω—Å": item.balance || 0,
    "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": item.comment || "",
    "–¢–∏–ø –ø–ª–∞—Ç–µ–∂–∞": mapPaymentType(item.paymentType || 0),
    "–°—Ç–∞—Ç—É—Å": mapPaymentStatus(item.status || 0)
  })));
  
  XLSX.utils.book_append_sheet(workbook, paymentsSheet, "–ü–ª–∞—Ç–µ–∂–∏");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—Å—Ç–∞ —Å —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ –∫–∞–º–ø–∞–Ω–∏—è–º–∏
function addCampaignsSheet(workbook: XLSX.WorkBook, campaigns: Campaign[]) {
  const campaignsSheet = XLSX.utils.json_to_sheet(campaigns.map(item => ({
    "ID –∫–∞–º–ø–∞–Ω–∏–∏": item.advertId || "",
    "–ù–∞–∑–≤–∞–Ω–∏–µ": cleanCampaignName(item.name || ""),
    "–¢–∏–ø": mapAdvertType(item.type || 0),
    "–°—Ç–∞—Ç—É—Å": mapAdvertStatus(item.status || 0),
    "–î–Ω–µ–≤–Ω–æ–π –±—é–¥–∂–µ—Ç": item.dailyBudget || 0,
    "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è": item.createTime || "",
    "–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è": item.changeTime || "",
    "–î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞": item.startTime || "",
    "–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è": item.endTime || ""
  })));
  
  XLSX.utils.book_append_sheet(workbook, campaignsSheet, "–ö–∞–º–ø–∞–Ω–∏–∏");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—Å—Ç–∞ —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –†–ö
function addFinancialSheet(workbook: XLSX.WorkBook, financialData: FinancialData[]) {
  const financialSheet = XLSX.utils.json_to_sheet(financialData.map(item => ({
    "ID –∫–∞–º–ø–∞–Ω–∏–∏": item.advertId || "",
    "–î–∞—Ç–∞": item.date || "",
    "–°—É–º–º–∞": item.sum || 0,
    "–°—á–µ—Ç": item.bill ? "–î–∞" : "–ù–µ—Ç",
    "–¢–∏–ø": item.type || "",
    "–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞": item.docNumber || "",
    "SKU": item.sku || ""
  })));
  
  XLSX.utils.book_append_sheet(workbook, financialSheet, "–§–∏–Ω–∞–Ω—Å—ã –†–ö");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—Å—Ç–∞ —Å —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å—é
function addCostPriceSheet(workbook: XLSX.WorkBook, costPriceData: any[]) {
  const costPriceSheet = XLSX.utils.json_to_sheet(costPriceData.map(item => ({
    "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞": item.vendorCode || "",
    "–ù–∞–∑–≤–∞–Ω–∏–µ": item.name || "",
    "–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å": item.costPrice || 0,
    "–í–∞–ª—é—Ç–∞": item.currency || "RUB",
    "–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è": item.lastUpdated || ""
  })));
  
  XLSX.utils.book_append_sheet(workbook, costPriceSheet, "–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏—Å—Ç–∞ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π —Ç–æ–≤–∞—Ä–æ–≤
function addProductAnalyticsSheet(workbook: XLSX.WorkBook, productAnalyticsData: any[]) {
  const analyticsSheet = XLSX.utils.json_to_sheet(productAnalyticsData);
  XLSX.utils.book_append_sheet(workbook, analyticsSheet, "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞");
} 